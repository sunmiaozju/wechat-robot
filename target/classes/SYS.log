2020-01-15 20:16:23:418:INFO cn.zhouyafeng.itchat4j.Wechat.<init>(Wechat.java:21) - 0. 初始化/home/sunm/work/code/wechat-robot/target/classes/groups_conf下的所有群配置文件
2020-01-15 20:16:23:623:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:32) - 获取UUID
2020-01-15 20:16:25:268:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:40) - 2. 获取登陆二维码图片
2020-01-15 20:16:25:632:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:48) - 3. 请扫描二维码图片，并在手机上确认
2020-01-15 20:16:32:216:INFO cn.zhouyafeng.itchat4j.service.impl.LoginServiceImpl.login(LoginServiceImpl.java:240) - 请点击微信确认按钮，进行登陆
2020-01-15 20:16:34:287:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:52) - 登陆成功
2020-01-15 20:16:34:287:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:58) - 5. 登陆成功，微信初始化
2020-01-15 20:16:36:007:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:64) - 6. 开启微信状态通知
2020-01-15 20:16:36:812:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:67) - 7. 清除。。。。
2020-01-15 20:16:36:813:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:69) - 欢迎回来， Coulson
2020-01-15 20:16:36:814:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:71) - 8. 开始接收消息
2020-01-15 20:16:36:817:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:74) - 9. 获取联系人信息
2020-01-15 20:16:39:750:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:77) - 10. 获取群好友及群好友列表
2020-01-15 20:16:41:725:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: 
2020-01-15 20:16:44:967:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:80) - 11. 缓存本次登陆好友相关消息
2020-01-15 20:16:44:968:INFO cn.zhouyafeng.itchat4j.controller.LoginController.login(LoginController.java:83) - 12.开启微信状态检测线程
2020-01-15 20:16:44:970:INFO cn.zhouyafeng.itchat4j.Wechat.start(Wechat.java:64) - +++++++++++++++++++开始消息处理+++++++++++++++++++++
2020-01-15 20:18:05:903:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: 打卡
2020-01-15 20:18:14:812:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: &lt;sysmsg type="revokemsg"&gt;&lt;revokemsg&gt;&lt;session&gt;23122566648@chatroom&lt;/session&gt;&lt;oldmsgid&gt;1713071695&lt;/oldmsgid&gt;&lt;msgid&gt;5296104169431482350&lt;/msgid&gt;&lt;replacemsg&gt;&lt;![CDATA["xin1996" 撤回了一条消息]]&gt;&lt;/replacemsg&gt;&lt;/revokemsg&gt;&lt;/sysmsg&gt;
2020-01-15 20:18:38:828:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: 撤回打卡
2020-01-15 20:18:48:235:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: &lt;sysmsg type="revokemsg"&gt;&lt;revokemsg&gt;&lt;session&gt;23122566648@chatroom&lt;/session&gt;&lt;oldmsgid&gt;1713071697&lt;/oldmsgid&gt;&lt;msgid&gt;2916451653950086117&lt;/msgid&gt;&lt;replacemsg&gt;&lt;![CDATA["xin1996" 撤回了一条消息]]&gt;&lt;/replacemsg&gt;&lt;/revokemsg&gt;&lt;/sysmsg&gt;
2020-01-15 20:19:00:948:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: 
2020-01-15 20:19:01:895:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: 
2020-01-15 20:19:11:806:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: 
2020-01-15 20:22:30:646:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: 请问A-LOAM laserOdometry.cpp代码里，帧间的位姿估计为什么要运行两次ceres优化？    用第一次的最优解作为初值，再进行第二次优化，有这必要吗？
2020-01-15 20:22:53:299:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: @石成玉 老师您看呢
2020-01-15 20:23:01:366:INFO cn.zhouyafeng.itchat4j.core.MsgCenter.produceMsg(MsgCenter.java:165) - 收到消息一条，内容: @197aa8518abedf57c3416dda4c5d06e3a274203775b13c045b12c8a64a62c4c546fd0914ea1afdd594f8c05ea825e425ccb6b8974bc6a511eefc36e88586dc236703ac89f3472c93b0e3b555d9496e96f5d6c6201e7888f6416ca61e6b3392097f7ae303d8f72ed77769ee879d71c962a5e6cd43cc744f47c99d831b9c3e2db51f0b52e74af61294c5e4b6d1bc41aa20939b2e4c6d57e0ef46c401027e597d68fcd30a993c022b799bddfba50fcf939944dcce96fb793707cb4e92bc393a3a3e750d94c1d01c22b1f692c13f36061c5f3943b1ffed9218a665c96936266176c019a55cac70534621280d61292a5c4fc10073c668095fad720bad1073fcd66e0b0c1cf6152b7f7329e52d7d237f91e19184913ac4391b68121a8739a71be180568545ea50abf7498eae3f3f4f9067f5563758f9a1ec38c83a0a88fa32dbaeb55621d7f0382098ecb8b5756f121d474736ba673d4a477e7256e7f0bee0f0b5718d4b73a219ff0b73fe449791d781cce63714253f87fb83608d2cd4d295606c8ab9f804e872516179ae0fc542da10b64d433f4469cccf2c924a25593962311467bf86b5eae35be993d4596fad7d67cd119f9cd25ffa6aeada102a4b9c84d53e142b4d0b7e9ab15560732c732d6a857ced0fe3b692f33f80187895113c581105ab167ba1ead5d997f10ccd0dc76953b32b05e8bcd3fc7bc28cd25d60c3fcf8fecf8bc1d26057404e6b4aeb221e0d71a08487e462dfbed293d5ebfeffdfea079c82cfac67862df8c79ac187a112db86bc44d9d64f3f38cd5e431d4d56eac2356f8d933c5ec4870f9c41bbb56fd34cf3846243e9fd776dfde14cbb391f584161e0a45d5d92c87507c3eb47c22c374c9ee4d83cc7e5cda4161acd9f526d81118374fac93ff02ba8f083b76500bc9aa8e01985a780cea66d48a2e8015096975f61d80efc4aaa9227d8909cd541edcbcdb4b8da11055b4c3dfb029046cddf8be468ef12da0cdfbf5b40528aa59615a65f8ecbbf5e315e3752a2147d09eabbcd3e93e9081ea74beae9c3ca33d8ca45dbf8d53ac5b451a4904f51efda5102940dd5d34d8b5e9273863ad1b5502f1752fc67b036ac6fd054508fe56428c6540560e1c9f73a8c89750df4fec10e40ffbca53ff2e565b25f12d1d0b14f167bf93ae7bbd914c4218ecdcf3b6ed6369290b4e2279a6938388183dd773fa69992e16e5095074022fc5752577bbf16d6535acbb1a0b28df6ec
